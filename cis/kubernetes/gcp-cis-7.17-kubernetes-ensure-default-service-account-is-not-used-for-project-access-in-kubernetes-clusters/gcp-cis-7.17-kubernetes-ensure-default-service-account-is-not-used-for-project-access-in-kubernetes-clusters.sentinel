import "tfplan/v2" as tfplan

allContainerClusters = filter tfplan.resource_changes as _, resource_changes {
	resource_changes.type is "google_container_cluster" and
		resource_changes.mode is "managed" and
		(resource_changes.change.actions contains "create" or
			resource_changes.change.actions is ["update"])
}

allNodePools = filter tfplan.resource_changes as _, resource_changes {
	resource_changes.type is "google_container_node_pool" and
		resource_changes.mode is "managed" and
		(resource_changes.change.actions contains "create" or
			resource_changes.change.actions is ["update"])
}

print("CIS 7.17: Ensure default Service account is not used for Project access in Kubernetes Clusters")

deny_undefined_cluster_node_config = rule {
	all allContainerClusters as _, cluster {
		keys(cluster.change.after) contains "node_config"
	}
}

cluster_service_account_is_enabled = rule when deny_undefined_cluster_node_config is true {
	all allContainerClusters as _, cluster {
		all cluster.change.after.node_config as _, node_config {
			keys(node_config) contains "service_account"
		}
	}
}

deny_undefined_pool_node_config = rule {
	all allNodePools as _, pool {
		keys(pool.change.after) contains "node_config"
	}
}

pool_service_account_is_enabled = rule when deny_undefined_pool_node_config is true {
	all allNodePools as _, pool {
		all pool.change.after.node_config as _, node_config {
			keys(node_config) contains "service_account"
		}
	}
}

main = rule {
	deny_undefined_cluster_node_config and
	deny_undefined_pool_node_config and
	cluster_service_account_is_enabled and
	pool_service_account_is_enabled
}
